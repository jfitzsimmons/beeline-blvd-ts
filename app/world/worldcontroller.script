local ____lualib = require("lualib_bundle")
local __TS__New = ____lualib.__TS__New
local __TS__SourceMapTraceBack = ____lualib.__TS__SourceMapTraceBack
__TS__SourceMapTraceBack(debug.getinfo(1).short_src, {["6"] = 6,["7"] = 6,["8"] = 7,["9"] = 8,["10"] = 9,["11"] = 10,["12"] = 13,["13"] = 14,["14"] = 14,["15"] = 15,["16"] = 15,["17"] = 17,["18"] = 18,["19"] = 19,["20"] = 20,["21"] = 21,["23"] = 23,["24"] = 24,["26"] = 17,["27"] = 29,["28"] = 30,["29"] = 31,["30"] = 32,["32"] = 34,["33"] = 29,["34"] = 37,["35"] = 42,["36"] = 43,["37"] = 45,["38"] = 46,["39"] = 47,["40"] = 48,["41"] = 37,["42"] = 58,["43"] = 67,["44"] = 68,["45"] = 69,["46"] = 70,["47"] = 71,["48"] = 72,["49"] = 73,["50"] = 74,["51"] = 75,["52"] = 76,["53"] = 77,["54"] = 78,["55"] = 79,["56"] = 80,["57"] = 81,["58"] = 82,["59"] = 84,["60"] = 85,["61"] = 86,["62"] = 87,["63"] = 88,["64"] = 89,["65"] = 93,["67"] = 95,["69"] = 58,["70"] = 100,["71"] = 107,["72"] = 108,["73"] = 110,["74"] = 114,["76"] = 116,["79"] = 100});
local ____exports = {}
local ____gamesystem2 = require("states.gamesystem2")
local Game = ____gamesystem2.Game
math.randomseed(os.time())
local settings = require("main.states.settings")
local save = require("main.states.save")
local gamesystem = require("main.systems.gamesystem")
_G.game = __TS__New(Game)
local ____G_game_0 = _G.game
local world = ____G_game_0.world
local ____world_1 = world
local player = ____world_1.player
local function handle_new_turn(self, load_type)
    if load_type == "room transition" then
        world.clock = world.clock + 1
        if world.clock > 23 then
            world.clock = world.clock - 24
        end
    elseif load_type == "new game" then
        gamesystem:init()
    end
end
local function show(self, current_proxy, p)
    if current_proxy then
        msg.post(current_proxy, "unload")
        current_proxy = nil
    end
    msg.post(p, "async_load")
end
function ____exports.init(self)
    self.current_proxy = nil
    self.load_type = "none"
    save:init()
    settings:init()
    msg.post("#", "acquire_input_focus")
    msg.post("#", "show_menu")
end
function ____exports.on_message(self, messageId, message, _sender)
    if messageId == hash("show_menu") then
        self.is_menu = true
        show(nil, self.current_proxy, "#main_menu")
    elseif messageId == hash("faint") then
        world.clock = world.clock + 6
        player.ap = player.ap_max - 6
        msg.post("#", "pick_room", message)
    elseif messageId == hash("arrested") then
        world.clock = world.clock + 6
        player.alert_level = 0
        player.ap = player.ap_max - 6
        msg.post("#", "pick_room", message)
    elseif messageId == hash("pick_room") then
        self.roomname = message.enter_room
        self.is_menu = false
        self.load_type = message.load_type
        handle_new_turn(nil, self.load_type)
        show(nil, self, "#" .. self.roomname)
    elseif messageId == hash("proxy_loaded") then
        self.current_proxy = _sender
        if self.is_menu == false then
            local params = {roomname = self.roomname, load_type = self.load_type}
            msg.post(self.roomname .. ":/level#level", "room_load", params)
        end
        msg.post(_sender, "enable")
    end
end
local function on_input(self, action_id, action)
    if action_id == hash("main_menu") and action.released then
        if self.is_menu == true then
            local params = {enter_room = self.roomname, load_type = "return to game"}
            msg.post("#", "pick_room", params)
        else
            msg.post("#", "show_menu")
        end
    end
end
init = ____exports.init
on_message = ____exports.on_message

